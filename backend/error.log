{"level":"error","message":"Error: \nInvalid `prisma.project.create()` invocation:\n\n{\n  data: {\n    title: \"DG Portofolio\",\n    description: \"Ini merupakan project portofolio saya sekaligus project pertama saya setelah saya belajar web developer kurang lebih 1 tahun\",\n    url: \"www.example.com\",\n    startDate: \"2024-08-15\",\n               ~~~~~~~~~~~~\n    endDate: \"2024-09-05\",\n    image: null,\n    username: \"persadanta13\"\n  },\n  select: {\n    id: true,\n    title: true,\n    description: true,\n    startDate: true,\n    endDate: true,\n    url: true,\n    image: true,\n    createdAt: true,\n    updatedAt: true,\n    username: true\n  }\n}\n\nInvalid value for argument `startDate`: premature end of input. Expected ISO-8601 DateTime.","service":"user-service"}
{"level":"error","message":"Error: \nInvalid `prisma.project.create()` invocation:\n\n{\n  data: {\n    title: \"Notes3\",\n    description: \"website notes2 berfungsi untuk menyimpan catatan\",\n    startDate: \"15-08-2024\",\n               ~~~~~~~~~~~~\n    username: \"raragata12\"\n  },\n  select: {\n    id: true,\n    title: true,\n    description: true,\n    startDate: true,\n    endDate: true,\n    url: true,\n    image: true,\n    createdAt: true,\n    updatedAt: true,\n    username: true\n  }\n}\n\nInvalid value for argument `startDate`: input contains invalid characters. Expected ISO-8601 DateTime.","service":"user-service"}
{"level":"error","message":"Error: \nInvalid `prisma.project.create()` invocation:\n\n{\n  data: {\n    title: \"Notes3\",\n    description: \"website notes2 berfungsi untuk menyimpan catatan\",\n    startDate: \"15-08-2024\",\n               ~~~~~~~~~~~~\n    username: \"raragata12\"\n  },\n  select: {\n    id: true,\n    title: true,\n    description: true,\n    startDate: true,\n    endDate: true,\n    url: true,\n    image: true,\n    createdAt: true,\n    updatedAt: true,\n    username: true\n  }\n}\n\nInvalid value for argument `startDate`: input contains invalid characters. Expected ISO-8601 DateTime.","service":"user-service"}
{"level":"error","message":"Error: \nInvalid `prisma.project.create()` invocation:\n\n{\n  data: {\n    title: \"DG Portofolio\",\n    description: \"Ini merupakan project portofolio saya sekaligus project pertama saya setelah saya belajar web developer kurang lebih 1 tahun\",\n    url: \"www.example.com\",\n    startDate: \"2024-08-26T00:00:00.000Z\",\n    endDate: \"2024-08-27T00:00:00.000Z\",\n    teknology: null,\n    ~~~~~~~~~\n    image: null,\n    username: \"persadanta13\",\n?   id?: Int,\n?   createdAt?: DateTime,\n?   updatedAt?: DateTime,\n?   technologies?: TechnologyUncheckedCreateNestedManyWithoutProjectsInput\n  },\n  select: {\n    id: true,\n    title: true,\n    description: true,\n    startDate: true,\n    endDate: true,\n    url: true,\n    image: true,\n    createdAt: true,\n    updatedAt: true,\n    username: true\n  }\n}\n\nUnknown argument `teknology`. Available options are marked with ?.","service":"user-service"}
{"level":"error","message":"Error: \nInvalid `prisma.project.create()` invocation:\n\n{\n  data: {\n    title: \"Notes3\",\n    description: \"website notes2 berfungsi untuk menyimpan catatan\",\n    startDate: \"15-08-2024\",\n               ~~~~~~~~~~~~\n    username: \"raragata12\"\n  },\n  select: {\n    id: true,\n    title: true,\n    description: true,\n    startDate: true,\n    endDate: true,\n    url: true,\n    image: true,\n    createdAt: true,\n    updatedAt: true,\n    username: true\n  }\n}\n\nInvalid value for argument `startDate`: input contains invalid characters. Expected ISO-8601 DateTime.","service":"user-service"}
{"level":"error","message":"Error: \nInvalid `prisma.project.create()` invocation:\n\n{\n  data: {\n    title: \"Notes3\",\n    description: \"website notes2 berfungsi untuk menyimpan catatan\",\n    startDate: \"08/26/2024\",\n               ~~~~~~~~~~~~\n    username: \"raragata12\"\n  },\n  select: {\n    id: true,\n    title: true,\n    description: true,\n    startDate: true,\n    endDate: true,\n    url: true,\n    image: true,\n    createdAt: true,\n    updatedAt: true,\n    username: true\n  }\n}\n\nInvalid value for argument `startDate`: input contains invalid characters. Expected ISO-8601 DateTime.","service":"user-service"}
{"level":"error","message":"Error: \nInvalid `prisma.project.findFirst()` invocation:\n\n{\n  where: {\n    id: \"(res) => {        setProjects(res);      }\"\n        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  },\n  select: {\n    id: true,\n    title: true,\n    description: true,\n    startDate: true,\n    endDate: true,\n    url: true,\n    image: true,\n    createdAt: true,\n    updatedAt: true,\n    username: true\n  }\n}\n\nArgument `id`: Invalid value provided. Expected IntFilter or Int, provided String.","service":"user-service"}
{"level":"error","message":"Error: \nInvalid `prisma.project.findFirst()` invocation:\n\n{\n  where: {\n    id: \"(res) => {        setProjects(res);      }\"\n        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  },\n  select: {\n    id: true,\n    title: true,\n    description: true,\n    startDate: true,\n    endDate: true,\n    url: true,\n    image: true,\n    createdAt: true,\n    updatedAt: true,\n    username: true\n  }\n}\n\nArgument `id`: Invalid value provided. Expected IntFilter or Int, provided String.","service":"user-service"}
{"level":"error","message":"Error: \nInvalid `prisma.project.findFirst()` invocation:\n\n{\n  where: {\n    id: \"(res) => {        setProjects(res);      }\"\n        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  },\n  select: {\n    id: true,\n    title: true,\n    description: true,\n    startDate: true,\n    endDate: true,\n    url: true,\n    image: true,\n    createdAt: true,\n    updatedAt: true,\n    username: true\n  }\n}\n\nArgument `id`: Invalid value provided. Expected IntFilter or Int, provided String.","service":"user-service"}
{"level":"error","message":"Error: \nInvalid `prisma.project.findFirst()` invocation:\n\n{\n  where: {\n    id: \"(res) => {        setProjects(res);      }\"\n        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  },\n  select: {\n    id: true,\n    title: true,\n    description: true,\n    startDate: true,\n    endDate: true,\n    url: true,\n    image: true,\n    createdAt: true,\n    updatedAt: true,\n    username: true\n  }\n}\n\nArgument `id`: Invalid value provided. Expected IntFilter or Int, provided String.","service":"user-service"}
{"level":"error","message":"Error: \nInvalid `prisma.project.findFirst()` invocation:\n\n{\n  where: {\n    id: \"(res) => {        setProjects(res);      }\"\n        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  },\n  select: {\n    id: true,\n    title: true,\n    description: true,\n    startDate: true,\n    endDate: true,\n    url: true,\n    image: true,\n    createdAt: true,\n    updatedAt: true,\n    username: true\n  }\n}\n\nArgument `id`: Invalid value provided. Expected IntFilter or Int, provided String.","service":"user-service"}
{"level":"error","message":"Error: \nInvalid `prisma.project.update()` invocation:\n\n\nAn operation failed because it depends on one or more records that were required but not found. Record to update not found.","service":"user-service"}
{"level":"error","message":"Error: \nInvalid `prisma.project.update()` invocation:\n\n\nAn operation failed because it depends on one or more records that were required but not found. Record to update not found.","service":"user-service"}
{"level":"error","message":"Error: \nInvalid `prisma.project.update()` invocation:\n\n\nAn operation failed because it depends on one or more records that were required but not found. Record to update not found.","service":"user-service"}
{"level":"error","message":"Error: \nInvalid `prisma.project.update()` invocation:\n\n\nAn operation failed because it depends on one or more records that were required but not found. Record to update not found.","service":"user-service"}
{"level":"error","message":"Error: \nInvalid `prisma.project.update()` invocation:\n\n\nAn operation failed because it depends on one or more records that were required but not found. Record to update not found.","service":"user-service"}
{"level":"error","message":"Error: \nInvalid `prisma.project.update()` invocation:\n\n\nAn operation failed because it depends on one or more records that were required but not found. Record to update not found.","service":"user-service"}
{"level":"error","message":"Error: \nInvalid `prisma.skill.create()` invocation:\n\n\nThe provided value for the column is too long for the column's type. Column: description","service":"user-service"}
{"level":"error","message":"Error: \nInvalid `prisma.skill.create()` invocation:\n\n\nThe provided value for the column is too long for the column's type. Column: description","service":"user-service"}
{"level":"error","message":"Error: \nInvalid `prisma.skill.create()` invocation:\n\n\nThe provided value for the column is too long for the column's type. Column: description","service":"user-service"}
{"level":"error","message":"Error: \nInvalid `prisma.skill.create()` invocation:\n\n\nThe provided value for the column is too long for the column's type. Column: description","service":"user-service"}
{"level":"error","message":"Error: \nInvalid `prisma.skill.findFirst()` invocation:\n\n{\n  where: {\n    id: \"[object Object]\"\n        ~~~~~~~~~~~~~~~~~\n  },\n  select: {\n    id: true,\n    name: true,\n    image: true,\n    description: true,\n    tahun: true,\n    createdAt: true,\n    updatedAt: true\n  }\n}\n\nArgument `id`: Invalid value provided. Expected IntFilter or Int, provided String.","service":"user-service"}
{"level":"error","message":"Error: \nInvalid `prisma.project.create()` invocation:\n\n\nThe provided value for the column is too long for the column's type. Column: description","service":"user-service"}
